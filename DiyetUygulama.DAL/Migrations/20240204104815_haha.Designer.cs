// <auto-generated />
using System;
using DiyetUygulama.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiyetUygulama.DAL.Migrations
{
    [DbContext(typeof(DiyetUygulamasiContext))]
    [Migration("20240204104815_haha")]
    partial class haha
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AdminSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            AdminName = "admin",
                            AdminSurname = "admin",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6418),
                            Email = "admin@admin.com",
                            Password = "password",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Et Ürünleri",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6350),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Tavuk Ürünleri",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6356),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Süt Ürünleri",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6361),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Meyveler",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6365),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Sebzeler",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6370),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Çorbalar",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6375),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Deniz Ürünleri",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6379),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Baklagiller",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6391),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Tatlılar",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6395),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Tahıl Ürünleri",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6400),
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "İçecekler",
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6404),
                            Status = 0
                        });
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MealDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("TotalCalories")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCarbonydrate")
                        .HasColumnType("float");

                    b.Property<double?>("TotalFat")
                        .HasColumnType("float");

                    b.Property<double?>("TotalProtein")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WaterConsumption")
                        .HasColumnType("integer");

                    b.HasKey("MealId");

                    b.HasIndex("MemberId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6426),
                            MealDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6425),
                            MealType = 1,
                            MemberId = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MemberSurname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6308),
                            Email = "member@member.com",
                            MemberName = "Tümay",
                            MemberSurname = "Özyazıcı",
                            MembershipDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6298),
                            Password = "password",
                            Status = 0
                        },
                        new
                        {
                            MemberId = 2,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6335),
                            Email = "q",
                            MemberName = "Tümay",
                            MemberSurname = "Özyazıcı",
                            MembershipDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6335),
                            Password = "q",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.MemberDetail", b =>
                {
                    b.Property<int>("MemberDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberDetailId"), 1L, 1);

                    b.Property<int?>("Allergy1")
                        .HasColumnType("int");

                    b.Property<int?>("Allergy2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("BodyMassIndex")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FatRatio")
                        .HasColumnType("float");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDiabetes")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("WaterConsumptionNeeded")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("MemberDetailId");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("MemberDetails");

                    b.HasData(
                        new
                        {
                            MemberDetailId = 1,
                            Allergy1 = 0,
                            Allergy2 = 1,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6325),
                            FatRatio = 20.0,
                            Gender = true,
                            Height = 180.0,
                            IsDiabetes = true,
                            MemberId = 1,
                            Status = 0,
                            Weight = 100.0
                        },
                        new
                        {
                            MemberDetailId = 2,
                            Allergy1 = 0,
                            Allergy2 = 1,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6342),
                            FatRatio = 20.0,
                            Gender = true,
                            Height = 180.0,
                            IsDiabetes = true,
                            MemberId = 2,
                            Status = 0,
                            Weight = 100.0
                        });
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("Calories")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Carbonhydrate")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Fat")
                        .HasColumnType("float");

                    b.Property<bool?>("HasGluten")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasLactose")
                        .HasColumnType("bit");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Portion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Protein")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MealId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Amount = 120.0,
                            Calories = 100.0,
                            Carbonhydrate = 2.6000000000000001,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6434),
                            Fat = 10.56,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\bonfile.jpg",
                            Portion = "1 dilim",
                            ProductName = "Bonfile",
                            Protein = 34.5,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 2,
                            Amount = 150.0,
                            Calories = 200.0,
                            Carbonhydrate = 45.799999999999997,
                            CategoryId = 8,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6443),
                            Fat = 1.3,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\pilav.jpg",
                            Portion = "1 porsiyon",
                            ProductName = "Pilav",
                            Protein = 5.2000000000000002,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 3,
                            Amount = 100.0,
                            Calories = 300.0,
                            Carbonhydrate = 30.0,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6451),
                            Fat = 15.800000000000001,
                            HasGluten = true,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\pizza.jpg",
                            Portion = "1 dilim",
                            ProductName = "Pizza",
                            Protein = 12.5,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 4,
                            Amount = 100.0,
                            Calories = 250.0,
                            Carbonhydrate = 40.5,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6458),
                            Fat = 2.2999999999999998,
                            HasGluten = true,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\makarna.jpg",
                            Portion = "100 gram",
                            ProductName = "Makarna",
                            Protein = 8.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 5,
                            Amount = 150.0,
                            Calories = 280.0,
                            Carbonhydrate = 30.5,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6463),
                            Fat = 8.6999999999999993,
                            HasGluten = true,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\lahmacun.jpg",
                            Portion = "1 adet",
                            ProductName = "Lahmacun",
                            Protein = 10.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 6,
                            Amount = 100.0,
                            Calories = 200.0,
                            Carbonhydrate = 25.5,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6470),
                            Fat = 12.300000000000001,
                            HasGluten = true,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\dondurma.jpg",
                            Portion = "1 top",
                            ProductName = "Dondurma",
                            Protein = 4.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 7,
                            Amount = 200.0,
                            Calories = 400.0,
                            Carbonhydrate = 40.0,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6475),
                            Fat = 15.5,
                            HasGluten = true,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\iskender.jpg",
                            Portion = "1 porsiyon",
                            ProductName = "İskender",
                            Protein = 20.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 8,
                            Amount = 250.0,
                            Calories = 150.0,
                            Carbonhydrate = 20.0,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6481),
                            Fat = 3.2000000000000002,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\çorba.jpg",
                            Portion = "1 kase",
                            ProductName = "Mercimek Çorbası",
                            Protein = 8.5,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 9,
                            Amount = 150.0,
                            Calories = 250.0,
                            Carbonhydrate = 30.5,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6488),
                            Fat = 8.0,
                            HasGluten = false,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\sütlaç.jpg",
                            Portion = "1 porsiyon",
                            ProductName = "Sütlaç",
                            Protein = 5.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 10,
                            Amount = 200.0,
                            Calories = 300.0,
                            Carbonhydrate = 10.5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6497),
                            Fat = 12.800000000000001,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\menemen.png",
                            Portion = "1 porsiyon",
                            ProductName = "Menemen",
                            Protein = 15.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 11,
                            Amount = 100.0,
                            Calories = 180.0,
                            Carbonhydrate = 0.5,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6502),
                            Fat = 10.199999999999999,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\hamsi.jpg",
                            Portion = "100 gram",
                            ProductName = "Hamsi",
                            Protein = 25.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 12,
                            Amount = 150.0,
                            Calories = 100.0,
                            Carbonhydrate = 6.5,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6508),
                            Fat = 5.0,
                            HasGluten = false,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\cacık.jpg",
                            Portion = "1 kase",
                            ProductName = "Cacık",
                            Protein = 2.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 13,
                            Amount = 30.0,
                            Calories = 70.0,
                            Carbonhydrate = 15.0,
                            CategoryId = 10,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6519),
                            Fat = 1.0,
                            HasGluten = true,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\ekmek.jpeg",
                            Portion = "1 dilim",
                            ProductName = "Ekmek",
                            Protein = 3.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 14,
                            Amount = 150.0,
                            Calories = 5.0,
                            Carbonhydrate = 10.0,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6525),
                            Fat = 0.10000000000000001,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\çay.jpeg",
                            Portion = "1 fincan",
                            ProductName = "Çay",
                            Protein = 0.5,
                            Status = 0,
                            Unit = "ml",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 15,
                            Amount = 100.0,
                            Calories = 300.0,
                            Carbonhydrate = 35.0,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6531),
                            Fat = 5.0,
                            HasGluten = true,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\suşi.jpeg",
                            Portion = "1 porsiyon",
                            ProductName = "Sushi",
                            Protein = 15.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 16,
                            Amount = 21.0,
                            Calories = 64.0,
                            Carbonhydrate = 17.300000000000001,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6537),
                            Fat = 0.0,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\bal.jpeg",
                            Portion = "1 yemek kaşığı",
                            ProductName = "Bal",
                            Protein = 0.29999999999999999,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 17,
                            Amount = 50.0,
                            Calories = 120.0,
                            Carbonhydrate = 0.20000000000000001,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6543),
                            Fat = 15.0,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\zeytin.jpeg",
                            Portion = "10 adet",
                            ProductName = "Zeytin",
                            Protein = 0.80000000000000004,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 18,
                            Amount = 100.0,
                            Calories = 80.0,
                            Carbonhydrate = 18.0,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6549),
                            Fat = 0.29999999999999999,
                            HasGluten = false,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\incir.jpeg",
                            Portion = "2 adet",
                            ProductName = "İncir",
                            Protein = 1.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 19,
                            Amount = 50.0,
                            Calories = 68.0,
                            Carbonhydrate = 0.59999999999999998,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6555),
                            Fat = 5.5,
                            HasGluten = false,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\yumurta.jpeg",
                            Portion = "1 adet",
                            ProductName = "Yumurta",
                            Protein = 6.7000000000000002,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 20,
                            Amount = 30.0,
                            Calories = 250.0,
                            Carbonhydrate = 2.0,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6561),
                            Fat = 21.0,
                            HasGluten = false,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\beyazpeynir.jpg",
                            Portion = "1 dilim",
                            ProductName = "Beyaz Peynir",
                            Protein = 17.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 21,
                            Amount = 100.0,
                            Calories = 300.0,
                            Carbonhydrate = 20.0,
                            CategoryId = 8,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6566),
                            Fat = 15.5,
                            HasGluten = true,
                            HasLactose = false,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\ciğköfte.JPG",
                            Portion = "100 gram",
                            ProductName = "Çiğköfte",
                            Protein = 12.0,
                            Status = 0,
                            Unit = "g",
                            Visible = true
                        },
                        new
                        {
                            ProductId = 22,
                            Amount = 250.0,
                            Calories = 120.0,
                            Carbonhydrate = 12.0,
                            CategoryId = 11,
                            CreatedDate = new DateTime(2024, 2, 4, 13, 48, 15, 100, DateTimeKind.Local).AddTicks(6575),
                            Fat = 3.5,
                            HasGluten = false,
                            HasLactose = true,
                            MealId = 1,
                            PhotoPath = "FoodPictures\\milk.jpg",
                            Portion = "1 bardak",
                            ProductName = "Süt",
                            Protein = 8.0,
                            Status = 0,
                            Unit = "ml",
                            Visible = true
                        });
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Meal", b =>
                {
                    b.HasOne("DiyetUygulama.DATA.Entities.Member", "Member")
                        .WithMany("Meals")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.MemberDetail", b =>
                {
                    b.HasOne("DiyetUygulama.DATA.Entities.Member", "Member")
                        .WithOne("MemberDetail")
                        .HasForeignKey("DiyetUygulama.DATA.Entities.MemberDetail", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Product", b =>
                {
                    b.HasOne("DiyetUygulama.DATA.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetUygulama.DATA.Entities.Meal", "Meal")
                        .WithMany("Products")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Meal", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiyetUygulama.DATA.Entities.Member", b =>
                {
                    b.Navigation("Meals");

                    b.Navigation("MemberDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
